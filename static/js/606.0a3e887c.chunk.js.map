{"version":3,"file":"static/js/606.0a3e887c.chunk.js","mappings":"kLAKO,SAASA,IAEZ,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,KACTC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAC3B,IAAIF,EACA,MAAM,IAAIG,MAAM,oBAEpB,MAAM,UAAEC,GAAcJ,GAChB,WAAEK,IAAeC,EAAAA,EAAAA,GAAoBF,GACrCG,EAAYF,EAAWG,MAAKD,GAAaA,EAAUX,KAAOa,OAAOb,KAGvE,OAAKW,GAKDG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACAC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QAAOF,SAAC,kIACtBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMF,UACjBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,YAAWF,SAAA,EACtBC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,QAAQC,QAASA,IAAMjB,EAAS,eAAec,SAAC,OAChEC,EAAAA,EAAAA,KAAA,OAAKG,IAAc,OAATT,QAAS,IAATA,OAAS,EAATA,EAAWU,MAAOC,IAAc,OAATX,QAAS,IAATA,OAAS,EAATA,EAAWY,QAC5CT,EAAAA,EAAAA,MAAA,OAAKI,UAAU,YAAWF,SAAA,EACtBF,EAAAA,EAAAA,MAAA,MAAII,UAAU,QAAOF,SAAA,CAAC,SACF,OAATL,QAAS,IAATA,OAAS,EAATA,EAAWY,SAEtBT,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,WAAkB,OAATL,QAAS,IAATA,OAAS,EAATA,EAAWa,UAChB,OAATb,QAAS,IAATA,GAAAA,EAAWc,MAAOX,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,UAAiB,OAATL,QAAS,IAATA,OAAS,EAATA,EAAWc,QAAe,MAC3DX,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,WAAkB,OAATL,QAAS,IAATA,OAAS,EAATA,EAAWe,WAC1BZ,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,YAAmB,OAATL,QAAS,IAATA,OAAS,EAATA,EAAWgB,YAC3Bb,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,YAAmB,OAATL,QAAS,IAATA,OAAS,EAATA,EAAWiB,uBAlB7BX,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kBAAiBF,SAAC,sGAwB/C,C,6CCzCO,SAASN,EAAoBmB,GAChC,MAAOpB,EAAYqB,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,GAmBvC,OAjBAK,EAAAA,EAAAA,YAAU,KACND,GAAW,GACXE,MAAM,kDAADC,OAAmDT,IACvDU,MAAKC,GAAYA,EAASC,SAC1BF,MAAMG,IAAU,IAADC,EACZb,GAAec,IACX,MAAMC,EAAeH,EAAKI,QAAQC,QAAQC,IAAaJ,EAAcK,MAAKC,GAAWA,EAAQlD,KAAOgD,EAAShD,OAC7G,MAAO,IAAI4C,KAAkBC,EAAa,IAE9CZ,EAA+B,QAAX,QAATU,EAAAD,EAAKS,YAAI,IAAAR,OAAA,EAATA,EAAWS,OACtBjB,GAAW,EAAM,IAEpBkB,OAAMC,GAAKC,QAAQC,MAAMF,EAAEG,WAC3BC,SAAQ,IAAMvB,GAAW,IAAO,GAElC,CAACN,IAEG,CACHpB,aACAuB,UACAE,UAER,C","sources":["components/Character.jsx","components/useSearchCharacters.jsx"],"sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useSearchCharacters } from \"./useSearchCharacters\";\r\nimport { useContext } from \"react\";\r\nimport { AppContext } from \"../context\";\r\n\r\nexport function Character() {\r\n\r\n    const { id } = useParams()\r\n    const navigate = useNavigate()\r\n    const context = useContext(AppContext)\r\n    if(!context) {\r\n        throw new Error('Error in context')\r\n    }\r\n    const { qualityCh } = context\r\n    const { characters } = useSearchCharacters(qualityCh)\r\n    const character = characters.find(character => character.id === Number(id))\r\n\r\n\r\n    if (!character) {\r\n        return <h1 className=\"not_found_title\">Персонаж не найден</h1>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h2 className=\"title\"> Информация о персонаже </h2>\r\n        <div className=\"card\">\r\n            <div className=\"card_info\">\r\n                <span className=\"close\" onClick={() => navigate('/characters')}>X</span>\r\n                <img src={character?.image} alt={character?.name} />\r\n                <div className=\"card_text\">\r\n                    <h2 className=\"title\">\r\n                        name: {character?.name}\r\n                    </h2>\r\n                    <span>Gender: {character?.gender}</span>\r\n                    {character?.type ? <span>Type: ${character?.type}</span> : null}\r\n                    <span>status: {character?.status}</span>\r\n                    <span>species: {character?.species}</span>\r\n                    <p>created: {character?.created}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\n\r\nexport function useSearchCharacters(n) {\r\n    const [characters, setCharacters] = useState([])\r\n    const [hasMore, setHasMore] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        fetch(`https://rickandmortyapi.com/api/character?page=${n}`)\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            setCharacters((prevLocations) => {\r\n                const newLocations = data.results.filter((location => !prevLocations.some(prevLoc => prevLoc.id === location.id)))\r\n                return [...prevLocations, ...newLocations];\r\n            });\r\n            setHasMore(data.info?.next !== null);\r\n            setLoading(false);\r\n        })\r\n        .catch(e => console.error(e.message))\r\n        .finally(() => setLoading(false));\r\n\r\n    }, [n])\r\n\r\n    return {\r\n        characters,\r\n        hasMore,\r\n        loading\r\n    }\r\n}"],"names":["Character","id","useParams","navigate","useNavigate","context","useContext","AppContext","Error","qualityCh","characters","useSearchCharacters","character","find","Number","_jsxs","_Fragment","children","_jsx","className","onClick","src","image","alt","name","gender","type","status","species","created","n","setCharacters","useState","hasMore","setHasMore","loading","setLoading","useEffect","fetch","concat","then","response","json","data","_data$info","prevLocations","newLocations","results","filter","location","some","prevLoc","info","next","catch","e","console","error","message","finally"],"sourceRoot":""}