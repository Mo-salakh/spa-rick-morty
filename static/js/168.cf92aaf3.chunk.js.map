{"version":3,"file":"static/js/168.cf92aaf3.chunk.js","mappings":"gLAKO,SAASA,IAEZ,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,KACTC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,IAErB,SAAEC,GAAaH,GACf,SAAEI,IAAaC,EAAAA,EAAAA,GAAkBF,GAEjCG,EAAUF,EAASG,MAAKC,GAAQA,EAAKV,KAAOW,OAAOX,KAEzD,OAAKQ,GAMDI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACjBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACtBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QAAOC,SAAEN,EAAQQ,QAC/BD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,iBAAeN,EAAQA,YAC7BO,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,iBAAeN,EAAQS,aAC7BF,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,yBAAuBN,EAAQU,oBAX1CN,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kBAAiBC,SAAC,0FAgB/C,C,6CC9BO,SAASP,EAAkBY,GAC9B,MAAOb,EAAUc,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,GAmBvC,OAjBAK,EAAAA,EAAAA,YAAU,KACND,GAAW,GACXE,MAAM,gDAADC,OAAiDT,IACrDU,MAAKC,GAAYA,EAASC,SAC1BF,MAAMG,IAAU,IAADC,EACZb,GAAac,IACT,MAAMC,EAAcH,EAAKI,QAAQC,QAAQC,IAAaJ,EAAaK,MAAKC,GAAWA,EAAQxC,KAAOsC,EAAStC,OAC3G,MAAO,IAAIkC,KAAiBC,EAAY,IAE5CZ,EAA+B,QAAX,QAATU,EAAAD,EAAKS,YAAI,IAAAR,OAAA,EAATA,EAAWS,OACtBjB,GAAW,EAAM,IAEpBkB,OAAMC,GAAKC,QAAQC,MAAMF,EAAEG,WAC3BC,SAAQ,IAAMvB,GAAW,IAAO,GAElC,CAACN,IAEG,CACHb,WACAgB,UACAE,UAER,C","sources":["components/Episode.jsx","components/useSeacrhEpisodes.jsx"],"sourcesContent":["import { useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport { AppContext } from \"../context\";\r\nimport { useSearchEpisodes } from \"./useSeacrhEpisodes\";\r\n\r\nexport function Episode() {\r\n\r\n    const { id } = useParams()\r\n    const context = useContext(AppContext)\r\n\r\n    const { qualityE } = context\r\n    const { episodes } = useSearchEpisodes(qualityE)\r\n\r\n    const episode = episodes.find(hero => hero.id === Number(id));\r\n\r\n    if (!episode) {\r\n        return <h1 className=\"not_found_title\">Эпизод не найден</h1>;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card_info\">\r\n                <h2 className=\"title\">{episode.name}</h2>\r\n                <div className=\"card_text\">\r\n                    <span>episode code: {episode.episode}</span>\r\n                    <span>episode date: {episode.air_date}</span>\r\n                    <span>episode created date: {episode.created}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\n\r\nexport function useSearchEpisodes(n) {\r\n    const [episodes, setEpisodes] = useState([])\r\n    const [hasMore, setHasMore] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        fetch(`https://rickandmortyapi.com/api/episode?page=${n}`)\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            setEpisodes((prevEpisodes) => {\r\n                const newEpisodes = data.results.filter((location => !prevEpisodes.some(prevLoc => prevLoc.id === location.id)))\r\n                return [...prevEpisodes, ...newEpisodes];\r\n            });\r\n            setHasMore(data.info?.next !== null);\r\n            setLoading(false);\r\n        })\r\n        .catch(e => console.error(e.message))\r\n        .finally(() => setLoading(false));\r\n\r\n    }, [n])\r\n\r\n    return {\r\n        episodes,\r\n        hasMore,\r\n        loading\r\n    }\r\n}"],"names":["Episode","id","useParams","context","useContext","AppContext","qualityE","episodes","useSearchEpisodes","episode","find","hero","Number","_jsx","className","children","_jsxs","name","air_date","created","n","setEpisodes","useState","hasMore","setHasMore","loading","setLoading","useEffect","fetch","concat","then","response","json","data","_data$info","prevEpisodes","newEpisodes","results","filter","location","some","prevLoc","info","next","catch","e","console","error","message","finally"],"sourceRoot":""}